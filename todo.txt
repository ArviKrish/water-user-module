create pagination
https://lishman.io/spring-data-mongodb-repositories

https://medium.com/@depu19/customizing-spring-data-mongodb-e75c729dc861
https://blog.marcnuri.com/spring-data-mongodb-custom-repository-implementation/
https://stackoverflow.com/questions/17035419/spring-data-mongodb-custom-implementation-propertyreferenceexception
where to place spring config, mongo config xml files.. like spring-data.xml



logger


index







@RequestMapping(value="/emp/{id}", method=RequestMethod.GET)
	public String getEmployee(@PathVariable("id") int id, Model model) throws Exception{
		//deliberately throwing different types of exception
		if(id==1){
			throw new EmployeeNotFoundException(id);
		}else if(id==2){
			throw new SQLException("SQLException, id="+String.valueOf(id));
		}else if(id==3){
			throw new IOException("IOException, id="+String.valueOf(id));
		}else if(id==10){
			return "home";
		}else {
			throw new Exception("Generic Exception, id="+String.valueOf(id));
		}
		
	}
    
    @ExceptionHandler(EmployeeNotFoundException.class)
	public ResponseEntity<Response> handleEmployeeNotFoundException(HttpServletRequest request, Exception ex){
		
    	return responseGenerator.createErrorResponse(ex.getMessage(), Constants.ERROR_CODE_1000, HttpStatus.BAD_REQUEST, null);
	}
    






/*DBCursor cursorDoc = collection.findOne(query);*/
		/*while (cursorDoc.hasNext()) {
			DBObject basicDBObject = cursorDoc.next();
			Users foo = mongoTemplate.getConverter().read(Users.class, basicDBObject); 
			System.out.println("GGGG : "+foo.getEmailId()); 
		}*/